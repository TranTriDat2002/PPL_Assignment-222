Program([
	VarDecl(a, AutoType, BinExpr(::, UnExpr(-, UnExpr(!, Id(a))), BinExpr(==, Id(b), BinExpr(||, Id(c), BinExpr(+, Id(d), BinExpr(*, Id(e), Id(f)))))))
	FuncDecl(a, VoidType, [Param(a, IntegerType), InheritOutParam(ouet, FloatType), InheritParam(oute, StringType)], None, BlockStmt([]))
	FuncDecl(a, IntegerType, [], None, BlockStmt([AssignStmt(Id(a), IntegerLit(1)), IfStmt(BinExpr(==, Id(a), IntegerLit(1)), BlockStmt([]), BlockStmt([WhileStmt(BinExpr(>=, Id(a), IntegerLit(0)), AssignStmt(Id(a), BinExpr(+, Id(a), IntegerLit(1))))])), ForStmt(AssignStmt(Id(i), Id(a)), BinExpr(<=, Id(i), Id(i)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([])), CallStmt(i, Id(a), Id(b), Id(c)), DoWhileStmt(BinExpr(||, Id(b), Id(a)), BlockStmt([AssignStmt(Id(a), IntegerLit(1)), CallStmt(print, Id(a))])), BreakStmt(), ForStmt(AssignStmt(Id(i), BinExpr(==, BinExpr(-, BinExpr(-, UnExpr(!, Id(a)), BinExpr(*, Id(b), Id(c))), UnExpr(-, Id(d))), IntegerLit(2))), BinExpr(||, BinExpr(&&, BinExpr(||, BinExpr(-, BinExpr(+, Id(i), IntegerLit(10)), BinExpr(%, IntegerLit(2), IntegerLit(3))), IntegerLit(4)), UnExpr(!, IntegerLit(5))), BinExpr(/, UnExpr(-, IntegerLit(6)), UnExpr(!, UnExpr(!, UnExpr(!, IntegerLit(7)))))), BinExpr(==, BinExpr(-, BinExpr(+, Id(i), Id(a)), BooleanLit(True)), BinExpr(+, BinExpr(/, StringLit(abc), FuncCall(abc, [IntegerLit(123)])), ArrayLit([Id(abc), StringLit(abc), BooleanLit(True), BooleanLit(False)]))), AssignStmt(ArrayCell(a, [IntegerLit(2)]), ArrayCell(a, [IntegerLit(56), BinExpr(==, IntegerLit(2), IntegerLit(1))]))), BreakStmt(), IfStmt(BinExpr(==, Id(b), IntegerLit(1)), BlockStmt([ContinueStmt(), BreakStmt()])), ReturnStmt(BinExpr(+, BinExpr(+, Id(a), Id(b)), Id(c))), BlockStmt([])]))
])